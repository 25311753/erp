#ifndef  _common_util_
#define  _common_util_

#include <vcl.h>
#include "DataModule.h"
#include "LdyInterface.h"
#include "BaseCode.h"
#include <vector>

typedef std::vector<CString> sql_t;
//设置panle里所有元素enabled属性
void enablePlCtrl(TPanel *pl, bool enabled = true){
	for(int i=0; i <pl->ControlCount; i++)
	{
		TControl *p = dynamic_cast<TControl*>(pl->Controls[i]);
		pl->Controls[i]->Enabled = enabled;
	}	
}

CString GetDate(TDateTimePicker *dtp)
{
        unsigned short year,month,day;
	dtp->DateTime.DecodeDate(&year,&month,&day);;
        char strDate[80];
        memset(strDate, 0x00, sizeof(strDate));
        sprintf(strDate,"%04d-%02d-%02d",year,month,day);
        return CString(strDate);
}

CString GetTime(TDateTimePicker *dtp){
  unsigned short y,m,d,h,mi,s,u;
  char strDate[80];
        memset(strDate, 0x00, sizeof(strDate));  
  dtp->DateTime.DecodeDate(&y,&m,&d);
  dtp->DateTime.DecodeTime(&h,&m,&s,&u);
  sprintf(strDate,"%04d-%02d-%02d %02d:%02d:%02d",y,m,d,h,mi,s);
  return CString(strDate);

}

CString GetTimeEnd(TDateTimePicker *dtp){
        unsigned short year,month,day;
	dtp->DateTime.DecodeDate(&year,&month,&day);;
        char strDate[80];
        memset(strDate, 0x00, sizeof(strDate));
        sprintf(strDate,"%04d-%02d-%02d 23:59:59",year,month,day);
        return CString(strDate);
}
void locateCbbByValue(TComboBox *cbb, AnsiString value){
        cbb->ItemIndex = cbb->Items->IndexOf(value);
}
void setDtp(TDateTimePicker *dtp, AnsiString value)
{
        TDateTime tDate;
        tDate=StrToDateTime(value);
        dtp->DateTime=tDate;
//        dtpEndDateHHMM->Time=tDate;
}

bool checkDataExist(CString sql){
      RunSQL(sql,true);
//      return dm1->Query1->RecordCount>0?true:false;
      return !dm1->Query1->Eof;
}

//batch sql by trans
int batchRunSQL(const sql_t &sqls){
        int rt = 0;
        //start tran
        BeginTransact();
        try {
                for(sql_t::const_iterator it=sqls.begin(); it!=sqls.end(); ++it){
#if 1
                        ShowMessage(AnsiString(*it));
#endif
                        RunTransactSQL(*it);
                }
                CommitTransact();
        } catch (...) {
                ShowMessage("操作失败");
                RollBackTransact();
                rt = -1;
        }
        //~end tran
        return rt;
}

#endif
